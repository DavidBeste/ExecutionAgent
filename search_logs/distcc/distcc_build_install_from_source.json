[
    {
        "url": "https://github.com/distcc/distcc",
        "analysis": "The webpage does not provide specific instructions for installing or building the project 'distcc' on a Debian/Ubuntu Linux system from the source code."
    },
    {
        "url": "https://pcl.readthedocs.io/en/latest/distcc.html",
        "analysis": "The webpage provides instructions on how to install and use `distcc` to speed up compilation on Ubuntu systems. Here are the relevant steps and requirements:\n\n1. Install `distcc` on Ubuntu:\n   - Run the following command in the terminal:\n     ```\n     sudo apt-get install distcc\n     ```\n\n2. Set up the server (machine running distcc daemon):\n   - Start the distcc daemon with the command:\n     ```\n     /etc/init.d/distcc start\n     ```\n\n3. Set up the client (machine with the source code to be compiled):\n   - Configuring cmake to use distcc instead of the default compiler. This can be done by invoking cmake with pre-flags:\n     ```\n     CC=\"distcc gcc\" CXX=\"distcc g++\" cmake ..\n     ```\n   - If compiling on systems supporting different SSE extensions leads to problems, set PCL_ENABLE_SSE to false:\n     ```\n     CC=\"distcc gcc\" CXX=\"distcc g++\" cmake -DPCL_ENABLE_SSE:BOOL=FALSE ../pcl\n     ```\n\n4. Tell `distcc` which hosts to use via environment variables:\n   - To use the local machine and both distcc servers, set:\n     ```\n     export DISTCC_HOSTS='localhost wgsc11 wgsc12'\n     ```\n   - To only use the distcc servers (wgsc11 and wgsc12), set:\n     ```\n     export DISTCC_HOSTS='wgsc11 wgsc12'\n     ```\n\n5. Increase the number of parallel compile units:\n   - Example command to start 32 processes and distribute them equally on the two distcc machines:\n     ```\n     make -j32\n     ```\n\nPlease note that for more detailed configuration options, you can visit the official `distcc` website at http://distcc.org."
    },
    {
        "url": "https://github.com/distcc/distcc/blob/master/INSTALL",
        "analysis": "Installation instructions for distcc on Debian/Ubuntu Linux system:\n\n1. Install prerequisites:\n   - sudo apt-get install gcc make python3 python3-dev python3-setuptools libiberty-dev autoconf\n\n2. Build and install:\n   - ./autogen.sh \n   - ./configure \n   - make \n   - make check (optional. Requires python >= 3.1)\n   - make install \n   - make installcheck (optional. Requires python >= 3.1)\n   - update-distcc-symlinks (requires sudo)\n\n3. Run distccd on each server machine with --allow options.\n   \n4. Set DISTCC_POTENTIAL_HOSTS on client machine:\n   - export DISTCC_POTENTIAL_HOSTS='localhost red green blue'\n\n5. Build software using distcc:\n   - cd ~/my_sources/my_project \n   - pump make -j40 CC=\"distcc gcc\" <your target>\n\n6. For troubleshooting, use the following commands:\n   - On client: DISTCC_VERBOSE=1\n   - On server: --log-level debug\n\nNote: Detailed instructions on prerequisites, configuring, building, installing, starting the daemon, editing configuration files, setting up host list, using pump mode, creating masquerade directories, and using with ccache can be found on the GitHub page."
    },
    {
        "url": "https://www.distcc.org/",
        "analysis": "The webpage provides the following instructions to install or build the project 'distcc' on a Debian/Ubuntu Linux system from source code:\n\n1. For each machine, download distcc, unpack, and run the following commands:\n   - ./configure\n   - make\n   - sudo make install\n\n2. On each of the servers, run the distccd daemon with the --allow options to restrict access.\n\n3. Put the names of the servers in your environment using the following command:\n   - export DISTCC_POTENTIAL_HOSTS='localhost red green blue'\n\n4. Build your project using the \"pump\" script and distcc as your C compiler:\n   - cd ~/work/myproject\n   - pump make -j8 CC=distcc\n\nAdditionally, it mentions that for more detailed installation instructions, one can refer to the INSTALL file.\n\nNote: The webpage does not provide specific commands to install dependencies on a Debian/Ubuntu system."
    },
    {
        "url": "https://zedware.github.io/Build-distcc-from-source-code/",
        "analysis": "Instructions to install/build 'distcc' on a Debian/Ubuntu Linux system from source code:\n\n1. Download distcc source code:\n- $ wget http://distcc.googlecode.com/files/distcc-3.1.tar.bz2\n\n2. Extract and configure distcc:\n- $ tar -xjfv distcc-3.1.tar.bz2\n- $ cd distcc-3.1\n- $ ./configure \u2013prefix=/home/zedware/usr\n\n3. Build and install distcc:\n- $ make\n- $ make install\n\n4. Set up distcc on servers:\n- On each server, run: $ distccd --daemon --allow=<IP_address of client machine>\n- Set potential distcc hosts: $ export DISTCC_POTENTIAL_HOSTS='localhost red green blue'\n\n5. Build projects using distcc:\n- Go to project directory: $ cd ~/work/myproject\n- Build project using distcc: $ pump make -j8 CC=distcc\n\nNote: If there are errors during build, refer to http://code.google.com/p/distcc/issues/detail?id=29. Make sure to have Python 2.4 or later installed in /home/zedware/usr/bin and set environment variables as needed before re-building distcc."
    }
]